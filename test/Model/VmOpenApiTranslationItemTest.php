<?php
/**
 * VmOpenApiTranslationItemTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Tampere\PtvV11
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * PTV Open Api version 11
 *
 * Here you can see listed all the PTV Open Api methods.
 *
 * The version of the OpenAPI document: v11
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Tampere\PtvV11\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * VmOpenApiTranslationItemTest Class Doc Comment
 *
 * @category    Class
 * @description OPEN API - View Model of translation item
 * @package     Tampere\PtvV11
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class VmOpenApiTranslationItemTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "VmOpenApiTranslationItem"
     */
    public function testVmOpenApiTranslationItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organizationId"
     */
    public function testPropertyOrganizationId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organizationName"
     */
    public function testPropertyOrganizationName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "businessCode"
     */
    public function testPropertyBusinessCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "orderer"
     */
    public function testPropertyOrderer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "orderId"
     */
    public function testPropertyOrderId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "orderState"
     */
    public function testPropertyOrderState()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "orderDate"
     */
    public function testPropertyOrderDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "orderResolvedDate"
     */
    public function testPropertyOrderResolvedDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sourceLanguage"
     */
    public function testPropertySourceLanguage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sourceLanguageCharAmount"
     */
    public function testPropertySourceLanguageCharAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "targetLanguage"
     */
    public function testPropertyTargetLanguage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "itemId"
     */
    public function testPropertyItemId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "itemName"
     */
    public function testPropertyItemName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
