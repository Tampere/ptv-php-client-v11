<?php
/**
 * V9VmOpenApiOrganizationInBaseTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Tampere\PtvV11
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * PTV Open Api version 11
 *
 * Here you can see listed all the PTV Open Api methods.
 *
 * The version of the OpenAPI document: v11
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Tampere\PtvV11\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * V9VmOpenApiOrganizationInBaseTest Class Doc Comment
 *
 * @category    Class
 * @description OPEN API V8 - View Model of organization for IN api - base
 * @package     Tampere\PtvV11
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class V9VmOpenApiOrganizationInBaseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "V9VmOpenApiOrganizationInBase"
     */
    public function testV9VmOpenApiOrganizationInBase()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sourceId"
     */
    public function testPropertySourceId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "businessCode"
     */
    public function testPropertyBusinessCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "businessName"
     */
    public function testPropertyBusinessName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "emails"
     */
    public function testPropertyEmails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "webPages"
     */
    public function testPropertyWebPages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "electronicInvoicings"
     */
    public function testPropertyElectronicInvoicings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "businessId"
     */
    public function testPropertyBusinessId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "versionId"
     */
    public function testPropertyVersionId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oid"
     */
    public function testPropertyOid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "municipality"
     */
    public function testPropertyMunicipality()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "addresses"
     */
    public function testPropertyAddresses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parentOrganizationId"
     */
    public function testPropertyParentOrganizationId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deleteAllEmails"
     */
    public function testPropertyDeleteAllEmails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deleteAllPhones"
     */
    public function testPropertyDeleteAllPhones()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deleteAllWebPages"
     */
    public function testPropertyDeleteAllWebPages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deleteAllAddresses"
     */
    public function testPropertyDeleteAllAddresses()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deleteAllElectronicInvoicings"
     */
    public function testPropertyDeleteAllElectronicInvoicings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "validFrom"
     */
    public function testPropertyValidFrom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "validTo"
     */
    public function testPropertyValidTo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currentPublishingStatus"
     */
    public function testPropertyCurrentPublishingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "userName"
     */
    public function testPropertyUserName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "availableLanguages"
     */
    public function testPropertyAvailableLanguages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requiredPropertiesAvailableLanguages"
     */
    public function testPropertyRequiredPropertiesAvailableLanguages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organizationType"
     */
    public function testPropertyOrganizationType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organizationNames"
     */
    public function testPropertyOrganizationNames()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organizationDescriptions"
     */
    public function testPropertyOrganizationDescriptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "displayNameType"
     */
    public function testPropertyDisplayNameType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "areaType"
     */
    public function testPropertyAreaType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "publishingStatus"
     */
    public function testPropertyPublishingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subAreaType"
     */
    public function testPropertySubAreaType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "areas"
     */
    public function testPropertyAreas()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "phoneNumbers"
     */
    public function testPropertyPhoneNumbers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
